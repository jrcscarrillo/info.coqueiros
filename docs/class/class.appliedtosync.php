<?php
/*
*
* -------------------------------------------------------
* CLASSNAME:        appliedtosync
* GENERATION DATE:  25.10.2017
* CLASS FILE:       C:\wamp64\www\genera_clase/generated_classes/class.appliedtosync.php
* FOR MYSQL TABLE:  appliedtosync
* FOR MYSQL DB:     dbaurora
* -------------------------------------------------------
* CODE GENERATED BY:
* MY PHP-MYSQL-CLASS GENERATOR
* from: >> www.voegeli.li >> (download for free!)
* modify: >> www.aurora-ec.net >> (download for free!)
* -------------------------------------------------------
*
*/
include_once("class.aurora.php");
// **********************
// CLASS DECLARATION
// **********************

class appliedtosync
{ // class : begin


// **********************
// ATTRIBUTE DECLARATION
// **********************


public $Id;   // (normal Attribute)
public $datecreated;   // (normal Attribute)
public $user;   // (normal Attribute)
public $billDesde;   // (normal Attribute)
public $billHasta;   // (normal Attribute)
public $invoiceDesde;   // (normal Attribute)
public $invoiceHasta;   // (normal Attribute)
public $billCreditDesde;   // (normal Attribute)
public $billCreditHasta;   // (normal Attribute)
public $creditMemoDesde;   // (normal Attribute)
public $creditMemoHasta;   // (normal Attribute)
public $productionDesde;   // (normal Attribute)
public $productionHasta;   // (normal Attribute)
public $retencionDesde;   // (normal Attribute)
public $retencionHasta;   // (normal Attribute)
public $otrosDesde;   // (normal Attribute)
public $otrosHasta;   // (normal Attribute)

var $db; // Instance of class database
var $estado; 


// **********************
// CONSTRUCTOR METHOD
// **********************

function __construct()
{

$this->db = conecta_PDO();
}

function __destruct()
{


}
public function initialize($entity = null, $options = array())
    {
     $Id= new Numeric("Id");
$Id->setLabel("Id");
$Id->setFilters(array('int'));
$Id->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($Id);

$datecreated= new Date("datecreated");
$datecreated->setLabel("datecreated");
$datecreated->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($datecreated);

$user= new Text("user");
$user->setLabel("user");
$user->setFilters(array('striptags', 'strig'));
$user->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($user);

$billDesde= new Date("billDesde");
$billDesde->setLabel("billDesde");
$billDesde->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($billDesde);

$billHasta= new Date("billHasta");
$billHasta->setLabel("billHasta");
$billHasta->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($billHasta);

$invoiceDesde= new Date("invoiceDesde");
$invoiceDesde->setLabel("invoiceDesde");
$invoiceDesde->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($invoiceDesde);

$invoiceHasta= new Date("invoiceHasta");
$invoiceHasta->setLabel("invoiceHasta");
$invoiceHasta->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($invoiceHasta);

$billCreditDesde= new Date("billCreditDesde");
$billCreditDesde->setLabel("billCreditDesde");
$billCreditDesde->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($billCreditDesde);

$billCreditHasta= new Date("billCreditHasta");
$billCreditHasta->setLabel("billCreditHasta");
$billCreditHasta->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($billCreditHasta);

$creditMemoDesde= new Date("creditMemoDesde");
$creditMemoDesde->setLabel("creditMemoDesde");
$creditMemoDesde->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($creditMemoDesde);

$creditMemoHasta= new Date("creditMemoHasta");
$creditMemoHasta->setLabel("creditMemoHasta");
$creditMemoHasta->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($creditMemoHasta);

$productionDesde= new Date("productionDesde");
$productionDesde->setLabel("productionDesde");
$productionDesde->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($productionDesde);

$productionHasta= new Date("productionHasta");
$productionHasta->setLabel("productionHasta");
$productionHasta->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($productionHasta);

$retencionDesde= new Date("retencionDesde");
$retencionDesde->setLabel("retencionDesde");
$retencionDesde->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($retencionDesde);

$retencionHasta= new Date("retencionHasta");
$retencionHasta->setLabel("retencionHasta");
$retencionHasta->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($retencionHasta);

$otrosDesde= new Date("otrosDesde");
$otrosDesde->setLabel("otrosDesde");
$otrosDesde->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($otrosDesde);

$otrosHasta= new Date("otrosHasta");
$otrosHasta->setLabel("otrosHasta");
$otrosHasta->addValidators(array(
new PresenceOf(array(
'message'=> 'Mensaje de validacion'
))
));
$this->add($otrosHasta);


    }
    
function genJson_appliedtosync($jsonString)
{
$_SESSION['appliedtosync']['Id'] = $jsonString->Id;
$_SESSION['appliedtosync']['datecreated'] = $jsonString->datecreated;
$_SESSION['appliedtosync']['user'] = $jsonString->user;
$_SESSION['appliedtosync']['billDesde'] = $jsonString->billDesde;
$_SESSION['appliedtosync']['billHasta'] = $jsonString->billHasta;
$_SESSION['appliedtosync']['invoiceDesde'] = $jsonString->invoiceDesde;
$_SESSION['appliedtosync']['invoiceHasta'] = $jsonString->invoiceHasta;
$_SESSION['appliedtosync']['billCreditDesde'] = $jsonString->billCreditDesde;
$_SESSION['appliedtosync']['billCreditHasta'] = $jsonString->billCreditHasta;
$_SESSION['appliedtosync']['creditMemoDesde'] = $jsonString->creditMemoDesde;
$_SESSION['appliedtosync']['creditMemoHasta'] = $jsonString->creditMemoHasta;
$_SESSION['appliedtosync']['productionDesde'] = $jsonString->productionDesde;
$_SESSION['appliedtosync']['productionHasta'] = $jsonString->productionHasta;
$_SESSION['appliedtosync']['retencionDesde'] = $jsonString->retencionDesde;
$_SESSION['appliedtosync']['retencionHasta'] = $jsonString->retencionHasta;
$_SESSION['appliedtosync']['otrosDesde'] = $jsonString->otrosDesde;
$_SESSION['appliedtosync']['otrosHasta'] = $jsonString->otrosHasta;

}

function genInsert_appliedtosync()
{
$this->setId($_SESSION['appliedtosync']['Id']);
$this->setdatecreated($_SESSION['appliedtosync']['datecreated']);
$this->setuser($_SESSION['appliedtosync']['user']);
$this->setbillDesde($_SESSION['appliedtosync']['billDesde']);
$this->setbillHasta($_SESSION['appliedtosync']['billHasta']);
$this->setinvoiceDesde($_SESSION['appliedtosync']['invoiceDesde']);
$this->setinvoiceHasta($_SESSION['appliedtosync']['invoiceHasta']);
$this->setbillCreditDesde($_SESSION['appliedtosync']['billCreditDesde']);
$this->setbillCreditHasta($_SESSION['appliedtosync']['billCreditHasta']);
$this->setcreditMemoDesde($_SESSION['appliedtosync']['creditMemoDesde']);
$this->setcreditMemoHasta($_SESSION['appliedtosync']['creditMemoHasta']);
$this->setproductionDesde($_SESSION['appliedtosync']['productionDesde']);
$this->setproductionHasta($_SESSION['appliedtosync']['productionHasta']);
$this->setretencionDesde($_SESSION['appliedtosync']['retencionDesde']);
$this->setretencionHasta($_SESSION['appliedtosync']['retencionHasta']);
$this->setotrosDesde($_SESSION['appliedtosync']['otrosDesde']);
$this->setotrosHasta($_SESSION['appliedtosync']['otrosHasta']);

}

function genLimpia_appliedtosync()
{
$_SESSION['appliedtosync']['Id'] = ' ';
$_SESSION['appliedtosync']['datecreated'] = ' ';
$_SESSION['appliedtosync']['user'] = ' ';
$_SESSION['appliedtosync']['billDesde'] = ' ';
$_SESSION['appliedtosync']['billHasta'] = ' ';
$_SESSION['appliedtosync']['invoiceDesde'] = ' ';
$_SESSION['appliedtosync']['invoiceHasta'] = ' ';
$_SESSION['appliedtosync']['billCreditDesde'] = ' ';
$_SESSION['appliedtosync']['billCreditHasta'] = ' ';
$_SESSION['appliedtosync']['creditMemoDesde'] = ' ';
$_SESSION['appliedtosync']['creditMemoHasta'] = ' ';
$_SESSION['appliedtosync']['productionDesde'] = ' ';
$_SESSION['appliedtosync']['productionHasta'] = ' ';
$_SESSION['appliedtosync']['retencionDesde'] = ' ';
$_SESSION['appliedtosync']['retencionHasta'] = ' ';
$_SESSION['appliedtosync']['otrosDesde'] = ' ';
$_SESSION['appliedtosync']['otrosHasta'] = ' ';

}

function gentraverse_appliedtosync($node)
{
$node->getElementsByTagName('Id')->item(0) === NULL ? $_SESSION['appliedtosync']['Id'] = 0 : $_SESSION['appliedtosync']['Id'] = $node->getElementsByTagName('Id')->item(0)->nodeValue;
$node->getElementsByTagName('datecreated')->item(0) === NULL ? $_SESSION['appliedtosync']['datecreated'] = '2010-08-10' : $_SESSION['appliedtosync']['datecreated'] = $node->getElementsByTagName('datecreated')->item(0)->nodeValue;
$node->getElementsByTagName('user')->item(0) === NULL ? $_SESSION['appliedtosync']['user'] = ' ' : $_SESSION['appliedtosync']['user'] = $node->getElementsByTagName('user')->item(0)->nodeValue;
$node->getElementsByTagName('billDesde')->item(0) === NULL ? $_SESSION['appliedtosync']['billDesde'] = '2010-08-10' : $_SESSION['appliedtosync']['billDesde'] = $node->getElementsByTagName('billDesde')->item(0)->nodeValue;
$node->getElementsByTagName('billHasta')->item(0) === NULL ? $_SESSION['appliedtosync']['billHasta'] = '2010-08-10' : $_SESSION['appliedtosync']['billHasta'] = $node->getElementsByTagName('billHasta')->item(0)->nodeValue;
$node->getElementsByTagName('invoiceDesde')->item(0) === NULL ? $_SESSION['appliedtosync']['invoiceDesde'] = '2010-08-10' : $_SESSION['appliedtosync']['invoiceDesde'] = $node->getElementsByTagName('invoiceDesde')->item(0)->nodeValue;
$node->getElementsByTagName('invoiceHasta')->item(0) === NULL ? $_SESSION['appliedtosync']['invoiceHasta'] = '2010-08-10' : $_SESSION['appliedtosync']['invoiceHasta'] = $node->getElementsByTagName('invoiceHasta')->item(0)->nodeValue;
$node->getElementsByTagName('billCreditDesde')->item(0) === NULL ? $_SESSION['appliedtosync']['billCreditDesde'] = '2010-08-10' : $_SESSION['appliedtosync']['billCreditDesde'] = $node->getElementsByTagName('billCreditDesde')->item(0)->nodeValue;
$node->getElementsByTagName('billCreditHasta')->item(0) === NULL ? $_SESSION['appliedtosync']['billCreditHasta'] = '2010-08-10' : $_SESSION['appliedtosync']['billCreditHasta'] = $node->getElementsByTagName('billCreditHasta')->item(0)->nodeValue;
$node->getElementsByTagName('creditMemoDesde')->item(0) === NULL ? $_SESSION['appliedtosync']['creditMemoDesde'] = '2010-08-10' : $_SESSION['appliedtosync']['creditMemoDesde'] = $node->getElementsByTagName('creditMemoDesde')->item(0)->nodeValue;
$node->getElementsByTagName('creditMemoHasta')->item(0) === NULL ? $_SESSION['appliedtosync']['creditMemoHasta'] = '2010-08-10' : $_SESSION['appliedtosync']['creditMemoHasta'] = $node->getElementsByTagName('creditMemoHasta')->item(0)->nodeValue;
$node->getElementsByTagName('productionDesde')->item(0) === NULL ? $_SESSION['appliedtosync']['productionDesde'] = '2010-08-10' : $_SESSION['appliedtosync']['productionDesde'] = $node->getElementsByTagName('productionDesde')->item(0)->nodeValue;
$node->getElementsByTagName('productionHasta')->item(0) === NULL ? $_SESSION['appliedtosync']['productionHasta'] = '2010-08-10' : $_SESSION['appliedtosync']['productionHasta'] = $node->getElementsByTagName('productionHasta')->item(0)->nodeValue;
$node->getElementsByTagName('retencionDesde')->item(0) === NULL ? $_SESSION['appliedtosync']['retencionDesde'] = '2010-08-10' : $_SESSION['appliedtosync']['retencionDesde'] = $node->getElementsByTagName('retencionDesde')->item(0)->nodeValue;
$node->getElementsByTagName('retencionHasta')->item(0) === NULL ? $_SESSION['appliedtosync']['retencionHasta'] = '2010-08-10' : $_SESSION['appliedtosync']['retencionHasta'] = $node->getElementsByTagName('retencionHasta')->item(0)->nodeValue;
$node->getElementsByTagName('otrosDesde')->item(0) === NULL ? $_SESSION['appliedtosync']['otrosDesde'] = '2010-08-10' : $_SESSION['appliedtosync']['otrosDesde'] = $node->getElementsByTagName('otrosDesde')->item(0)->nodeValue;
$node->getElementsByTagName('otrosHasta')->item(0) === NULL ? $_SESSION['appliedtosync']['otrosHasta'] = '2010-08-10' : $_SESSION['appliedtosync']['otrosHasta'] = $node->getElementsByTagName('otrosHasta')->item(0)->nodeValue;

}

function adiciona_appliedtosync()
{
        $this->estado = 'ERR';
	$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
        $sql = 'INSERT INTO appliedtosync ( datecreated, user, billDesde, billHasta, invoiceDesde, invoiceHasta, billCreditDesde, billCreditHasta, creditMemoDesde, creditMemoHasta, productionDesde, productionHasta, retencionDesde, retencionHasta, otrosDesde, otrosHasta) VALUES ( :datecreated, :user, :billDesde, :billHasta, :invoiceDesde, :invoiceHasta, :billCreditDesde, :billCreditHasta, :creditMemoDesde, :creditMemoHasta, :productionDesde, :productionHasta, :retencionDesde, :retencionHasta, :otrosDesde, :otrosHasta)';
	$stmt = $this->db->prepare($sql);
	$stmt->bindParam(':datecreated', $_SESSION['appliedtosync']['datecreated'] );
	$stmt->bindParam(':user', $_SESSION['appliedtosync']['user'] );
	$stmt->bindParam(':billDesde', $_SESSION['appliedtosync']['billDesde'] );
	$stmt->bindParam(':billHasta', $_SESSION['appliedtosync']['billHasta'] );
	$stmt->bindParam(':invoiceDesde', $_SESSION['appliedtosync']['invoiceDesde'] );
	$stmt->bindParam(':invoiceHasta', $_SESSION['appliedtosync']['invoiceHasta'] );
	$stmt->bindParam(':billCreditDesde', $_SESSION['appliedtosync']['billCreditDesde'] );
	$stmt->bindParam(':billCreditHasta', $_SESSION['appliedtosync']['billCreditHasta'] );
	$stmt->bindParam(':creditMemoDesde', $_SESSION['appliedtosync']['creditMemoDesde'] );
	$stmt->bindParam(':creditMemoHasta', $_SESSION['appliedtosync']['creditMemoHasta'] );
	$stmt->bindParam(':productionDesde', $_SESSION['appliedtosync']['productionDesde'] );
	$stmt->bindParam(':productionHasta', $_SESSION['appliedtosync']['productionHasta'] );
	$stmt->bindParam(':retencionDesde', $_SESSION['appliedtosync']['retencionDesde'] );
	$stmt->bindParam(':retencionHasta', $_SESSION['appliedtosync']['retencionHasta'] );
	$stmt->bindParam(':otrosDesde', $_SESSION['appliedtosync']['otrosDesde'] );
	$stmt->bindParam(':otrosHasta', $_SESSION['appliedtosync']['otrosHasta'] );
	$stmt->execute();
        } catch(PDOException $e) {
            echo $e->getMessage();
        }    
}

function quitaslashes_appliedtosync()
{
$_SESSION['appliedtosync']['datecreated'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['datecreated']));
$_SESSION['appliedtosync']['user'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['user']));
$_SESSION['appliedtosync']['billDesde'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['billDesde']));
$_SESSION['appliedtosync']['billHasta'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['billHasta']));
$_SESSION['appliedtosync']['invoiceDesde'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['invoiceDesde']));
$_SESSION['appliedtosync']['invoiceHasta'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['invoiceHasta']));
$_SESSION['appliedtosync']['billCreditDesde'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['billCreditDesde']));
$_SESSION['appliedtosync']['billCreditHasta'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['billCreditHasta']));
$_SESSION['appliedtosync']['creditMemoDesde'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['creditMemoDesde']));
$_SESSION['appliedtosync']['creditMemoHasta'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['creditMemoHasta']));
$_SESSION['appliedtosync']['productionDesde'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['productionDesde']));
$_SESSION['appliedtosync']['productionHasta'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['productionHasta']));
$_SESSION['appliedtosync']['retencionDesde'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['retencionDesde']));
$_SESSION['appliedtosync']['retencionHasta'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['retencionHasta']));
$_SESSION['appliedtosync']['otrosDesde'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['otrosDesde']));
$_SESSION['appliedtosync']['otrosHasta'] = htmlspecialchars(strip_tags($_SESSION['appliedtosync']['otrosHasta']));

 
    }
    


// **********************
// GETTER METHODS
// **********************


function getId()
{
return $this->Id;
}

function getdatecreated()
{
return $this->datecreated;
}

function getuser()
{
return $this->user;
}

function getbillDesde()
{
return $this->billDesde;
}

function getbillHasta()
{
return $this->billHasta;
}

function getinvoiceDesde()
{
return $this->invoiceDesde;
}

function getinvoiceHasta()
{
return $this->invoiceHasta;
}

function getbillCreditDesde()
{
return $this->billCreditDesde;
}

function getbillCreditHasta()
{
return $this->billCreditHasta;
}

function getcreditMemoDesde()
{
return $this->creditMemoDesde;
}

function getcreditMemoHasta()
{
return $this->creditMemoHasta;
}

function getproductionDesde()
{
return $this->productionDesde;
}

function getproductionHasta()
{
return $this->productionHasta;
}

function getretencionDesde()
{
return $this->retencionDesde;
}

function getretencionHasta()
{
return $this->retencionHasta;
}

function getotrosDesde()
{
return $this->otrosDesde;
}

function getotrosHasta()
{
return $this->otrosHasta;
}

// **********************
// SETTER METHODS
// **********************


function setId($val)
{
$this->Id =  $val;
}

function setdatecreated($val)
{
$this->datecreated =  $val;
}

function setuser($val)
{
$this->user =  $val;
}

function setbillDesde($val)
{
$this->billDesde =  $val;
}

function setbillHasta($val)
{
$this->billHasta =  $val;
}

function setinvoiceDesde($val)
{
$this->invoiceDesde =  $val;
}

function setinvoiceHasta($val)
{
$this->invoiceHasta =  $val;
}

function setbillCreditDesde($val)
{
$this->billCreditDesde =  $val;
}

function setbillCreditHasta($val)
{
$this->billCreditHasta =  $val;
}

function setcreditMemoDesde($val)
{
$this->creditMemoDesde =  $val;
}

function setcreditMemoHasta($val)
{
$this->creditMemoHasta =  $val;
}

function setproductionDesde($val)
{
$this->productionDesde =  $val;
}

function setproductionHasta($val)
{
$this->productionHasta =  $val;
}

function setretencionDesde($val)
{
$this->retencionDesde =  $val;
}

function setretencionHasta($val)
{
$this->retencionHasta =  $val;
}

function setotrosDesde($val)
{
$this->otrosDesde =  $val;
}

function setotrosHasta($val)
{
$this->otrosHasta =  $val;
}

// ************************************************************************************
// SELECT busca igual en el campo estado retorna OK si existe el registro
//          retorna actualiza si es el mismo registro y tambien carga en la instancia
//          los valores de la lectura
// *************************************************************************************

    function buscaIgual_appliedtosync() {
        $estado = 'ERR';
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
            $sql =  'SELECT * FROM invoice WHERE TxnID = :clave ';
            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':clave', $_SESSION['appliedtosync']['TxnID']);
            $stmt->execute();
            $registro = $stmt->fetch(PDO::FETCH_ASSOC);
            if ( ! $registro){
                $this->estado = 'OK';
            } else {
                if ($registro['TxnID'] === $_SESSION['appliedtosync']['TxnID']) {
                $this->estado = 'ACTUALIZA';
                }
            }
            
        } catch(PDOException $e) {
            echo $e->getMessage();
        } 
    
    return $this->estado;
    }
// ************************************************************************************
// SELECT dependiendo de las condiones recibidas desde el programa llamado se parsea
//          el archivo json para cargar las comparaciones y tambien los nombres de las variables
//          para una lectura de todos los registros que cumplan la condicion
// *************************************************************************************

    function leetodos_appliedtosync() {
        $estado = 'ERR';
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        try {
            $sql =  'SELECT * FROM invoice WHERE TxnID = :clave ';
            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':clave', $_SESSION['appliedtosync']['TxnID']);
            $stmt->execute();
            $registro = $stmt->fetchAll(PDO::FETCH_ASSOC);
            if ( ! $registro){
                $this->estado = 'OK';
            } else {
                $this->estado = 'TODOS';
            }
            
        } catch(PDOException $e) {
            echo $e->getMessage();
        } 
    
    return $this->estado;
    }
// **********************
// SELECT METHOD / LOAD
// **********************

function select_appliedtosync()
{

$this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
	try {
$sql = 'SELECT * FROM appliedtosync WHERE id = :clave'; 
$stmt = $this->db->prepare($sql);
    $stmt->bindParam(":clave", $_SESSION['appliedtosync']['TxnID']);
        $stmt->execute();
	$registro = $stmt->fetch(PDO::FETCH_ASSOC);
	if ( ! $registro) {
		$this->estado = 'OK';
		return $this->estado;
	} else {
                
		if ($registro['TxnID'] === $_SESSION['invoice']['TxnID']) {
                    $this->estado = 'ACTUALIZA';
                    }
                    }
            
                } catch(PDOException $e) {
                    echo $e->getMessage();
                }
                
		$this->Id = $registro['Id'];

		$this->datecreated = $registro['datecreated'];

		$this->user = $registro['user'];

		$this->billDesde = $registro['billDesde'];

		$this->billHasta = $registro['billHasta'];

		$this->invoiceDesde = $registro['invoiceDesde'];

		$this->invoiceHasta = $registro['invoiceHasta'];

		$this->billCreditDesde = $registro['billCreditDesde'];

		$this->billCreditHasta = $registro['billCreditHasta'];

		$this->creditMemoDesde = $registro['creditMemoDesde'];

		$this->creditMemoHasta = $registro['creditMemoHasta'];

		$this->productionDesde = $registro['productionDesde'];

		$this->productionHasta = $registro['productionHasta'];

		$this->retencionDesde = $registro['retencionDesde'];

		$this->retencionHasta = $registro['retencionHasta'];

		$this->otrosDesde = $registro['otrosDesde'];

		$this->otrosHasta = $registro['otrosHasta'];


}

// *******************************
// UNSET METHOD / clean
// *******************************

function cleanSession_appliedtosync()
{

                unset($_SESSION['appliedtosync']['Id']);
unset($_SESSION['appliedtosync']['datecreated']);
unset($_SESSION['appliedtosync']['user']);
unset($_SESSION['appliedtosync']['billDesde']);
unset($_SESSION['appliedtosync']['billHasta']);
unset($_SESSION['appliedtosync']['invoiceDesde']);
unset($_SESSION['appliedtosync']['invoiceHasta']);
unset($_SESSION['appliedtosync']['billCreditDesde']);
unset($_SESSION['appliedtosync']['billCreditHasta']);
unset($_SESSION['appliedtosync']['creditMemoDesde']);
unset($_SESSION['appliedtosync']['creditMemoHasta']);
unset($_SESSION['appliedtosync']['productionDesde']);
unset($_SESSION['appliedtosync']['productionHasta']);
unset($_SESSION['appliedtosync']['retencionDesde']);
unset($_SESSION['appliedtosync']['retencionHasta']);
unset($_SESSION['appliedtosync']['otrosDesde']);
unset($_SESSION['appliedtosync']['otrosHasta']);


            }

// **********************
// DELETE
// **********************

function delete_appliedtosync($id)
{


}

// **********************
// UPDATE
// **********************

function update_appliedtosync()
{
    $this->estado = 'ERR';
	 $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            try {
	$sql = 'UPDATE appliedtosync SET Id=$this->Id,datecreated=$this->datecreated,user=$this->user,billDesde=$this->billDesde,billHasta=$this->billHasta,invoiceDesde=$this->invoiceDesde,invoiceHasta=$this->invoiceHasta,billCreditDesde=$this->billCreditDesde,billCreditHasta=$this->billCreditHasta,creditMemoDesde=$this->creditMemoDesde,creditMemoHasta=$this->creditMemoHasta,productionDesde=$this->productionDesde,productionHasta=$this->productionHasta,retencionDesde=$this->retencionDesde,retencionHasta=$this->retencionHasta,otrosDesde=$this->otrosDesde,otrosHasta=$this->otrosHasta WHERE id = :clave;'; 
	$stmt = $this->db->prepare($sql);
	$stmt->bindParam(':clave', $_SESSION['invoice']['TxnID']);
	$stmt->execute();
     } catch(PDOException $e) {
}
     }

}
?>
<!-- end of generated class -->
